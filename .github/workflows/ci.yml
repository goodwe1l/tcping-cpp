name: CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12, windows-2022]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup build tools (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential g++

      - name: Setup build tools (Windows)
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v1.1

      - name: Build (Linux/macOS)
        if: runner.os != 'Windows'
        working-directory: tcping-src
        run: |
          chmod +x build.sh
          ./build.sh

      - name: Build (Windows)
        if: runner.os == 'Windows'
        working-directory: tcping-src
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cl /EHsc /O2 /std:c++11 /D "OS_WINDOWS" /D "_CRT_SECURE_NO_WARNINGS" /I. main.cpp tcping.cpp base64.cpp tee.cpp ws-util.cpp /link ws2_32.lib /out:tcping.exe

      - name: Test build
        working-directory: tcping-src
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            ./tcping.exe --help
          else
            ./tcping --help
          fi
        shell: bash
